WIDGETS_COMMON_O := scope_common.o graph_common.o valSelector_common.o trace_common.o
WIDGETS_COMMON_H := scope_common.h graph_common.h valSelector_common.h trace_common.h
WIDGETS_STRUCTURE_O := scope_structure.o graph_structure.o valSelector_structure.o trace_structure.o
WIDGETS_STRUCTURE_H := scope_structure.h graph_structure.h valSelector_structure.h trace_structure.h
WIDGETS_LAYOUT_O := scope_layout.o graph_layout.o valSelector_layout.o trace_layout.o
WIDGETS_LAYOUT_H := scope_layout.h graph_layout.h valSelector_layout.h trace_layout.h
WIDGETS := ${WIDGETS_O} ${WIDGETS_H}

all: ${WIDGETS_COMMON_O} ${WIDGETS_COMMON_H} ${WIDGETS_STRUCTURE_O} ${WIDGETS_STRUCTURE_H} ${WIDGETS_LAYOUT_O} ${WIDGETS_LAYOUT_H}  \
     shellinabox/bin/shellinaboxd${EXE} mongoose/mongoose${EXE} graphviz/bin/dot${EXE} \
     ID3-Decision-Tree \
     xdottool \
     noVNC \
     external_scripts
	chmod 755 canviz-0.1 
	chmod 644 canviz-0.1/*
	chmod 755 canviz-0.1/excanvas canviz-0.1/lib canviz-0.1/path canviz-0.1/prototype
	chmod 644 canviz-0.1/*/*

scope_common.o: scope_common.C scope_common.h ../attributes_common.h ../dbglog_common.h
	g++ -g scope_common.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o scope_common.o

scope_structure.o: scope_structure.C scope_structure.h ../attributes_structure.h ../dbglog_structure.h
	g++ -g scope_structure.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o scope_structure.o

scope_layout.o: scope_layout.C scope_layout.h ../attributes_layout.h ../dbglog_layout.h
	g++ -g scope_layout.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o scope_layout.o


graph_common.o: graph_common.C graph_common.h ../attributes_common.h ../dbglog_common.h
	g++ -g graph_common.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o graph_common.o

graph_structure.o: graph_structure.C graph_structure.h ../attributes_structure.h ../dbglog_structure.h
	g++ -g graph_structure.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o graph_structure.o

graph_layout.o: graph_layout.C graph_layout.h ../attributes_layout.h ../dbglog_layout.h
	g++ -g graph_layout.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o graph_layout.o


valSelector_common.o: valSelector_common.C valSelector_common.h ../dbglog_common.h
	g++ -g valSelector_common.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o valSelector_common.o

valSelector_structure.o: valSelector_structure.C valSelector_structure.h ../dbglog_structure.h
	g++ -g valSelector_structure.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o valSelector_structure.o

valSelector_layout.o: valSelector_layout.C valSelector_layout.h ../dbglog_layout.h
	g++ -g valSelector_layout.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o valSelector_layout.o


trace_common.o: trace_common.C trace_common.h ../dbglog_common.h
	g++ -g trace_common.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o trace_common.o

trace_structure.o: trace_structure.C trace_structure.h ../dbglog_structure.h
	g++ -g trace_structure.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o trace_structure.o

trace_layout.o: trace_layout.C trace_layout.h ../dbglog_layout.h
	g++ -g trace_layout.C -I.. -DROOT_PATH="\"${ROOT_PATH}\"" -DGDB_PORT=${GDB_PORT} -c -o trace_layout.o


ifneq (${OS}, Cygwin)
xdottool:
	rm -rf xdotool-2.20110530.1.tar.gz xdottool
	wget http://semicomplete.googlecode.com/files/xdotool-2.20110530.1.tar.gz
	tar -xf xdotool-2.20110530.1.tar.gz
	cd xdotool-2.20110530.1; CC=gcc; make
	mv xdotool-2.20110530.1 xdottool
else
xdottool:
endif

ifneq (${OS}, Cygwin)
shellinabox/bin/shellinaboxd${EXE}:
	rm -f shellinabox-2.14.tar.gz
	cd widgets; wget --no-check-certificate https://shellinabox.googlecode.com/files/shellinabox-2.14.tar.gz
	cd widgets; tar -xf shellinabox-2.14.tar.gz
	cd shellinabox-2.14; ./configure --prefix=${ROOT_PATH}/widgets/shellinabox
	cd shellinabox-2.14; make
	cd shellinabox-2.14; make install
	rm -r shellinabox-2.14 shellinabox-2.14.tar.gz
else
shellinabox/bin/shellinaboxd${EXE}:
endif

# Set this to the current Operating System (needed by the Mongoose web server). 
# Choices: linux|bsd|solaris|mac|windows|mingw|cygwin
ifeq (${OS}, Cygwin)
OS_MONGOOSE := cygwin
else
OS_MONGOOSE := linux
endif

mongoose/mongoose${EXE}:
	rm -f mongoose-3.8.tgz
	cd widgets; wget --no-check-certificate https://mongoose.googlecode.com/files/mongoose-3.8.tgz
	cd widgets; tar -xf mongoose-3.8.tgz
	cd widgets; rm mongoose-3.8.tgz
	cd mongoose; make ${OS_MONGOOSE}

graphviz/bin/dot${EXE}:
ifeq (${OS},Cygwin)
	rm -rf graphviz-2.32.zip release
	cd widgets; wget http://www.graphviz.org/pub/graphviz/stable/windows/graphviz-2.32.zip
	cd widgets; unzip graphviz-2.32.zip
	mkdir graphviz
	mv release/* graphviz
	rm -r graphviz-2.32.zip release
	chmod 755 graphviz/bin/*
else
	cd widgets; wget http://www.graphviz.org/pub/graphviz/stable/SOURCES/graphviz-2.32.0.tar.gz
	cd widgets; tar -xf graphviz-2.32.0.tar.gz
	cd graphviz-2.32.0; export CC=gcc; export CXX=g++; ./configure --prefix=${ROOT_PATH}/widgets/graphviz --disable-swig --disable-sharp --disable-go --disable-io --disable-java --disable-lua --disable-ocaml --disable-perl --disable-php --disable-python --disable-r --disable-ruby --disable-tcl --without-pic --without-efence --without-expat --without-devil --without-webp --without-poppler --without-ghostscript --without-visio --without-pangocairo --without-lasi --without-glitz --without-freetype2 --without-fontconfig --without-gdk-pixbuf --without-gtk --without-gtkgl --without-gtkglext --without-gts --without-glade --without-ming --without-qt --without-quartz --without-gdiplus --without-libgd --without-glut --without-sfdp --without-smyrna --without-ortho --without-digcola --without-ipsepcola --enable-static --disable-shared
	cd graphviz-2.32.0; make
	cd graphviz-2.32.0; make install
	mv graphviz/bin/dot_static graphviz/bin/dot
	rm -r graphviz-2.32.0 graphviz-2.32.0.tar.gz
endif

ID3-Decision-Tree:
	rm -fr master*
	cd widgets; wget --no-check-certificate https://github.com/willkurt/ID3-Decision-Tree/archive/master.zip
	cd widgets; mv master master.zip; unzip master.zip
	mv ID3-Decision-Tree-master ID3-Decision-Tree
	rm -r master*
	chmod 755 ID3-Decision-Tree
	chmod 644 ID3-Decision-Tree/*
	chmod 755 ID3-Decision-Tree/data ID3-Decision-Tree/js
	chmod 644 ID3-Decision-Tree/*/*

noVNC:
	rm -rf master
	wget --no-check-certificate http://github.com/kanaka/noVNC/tarball/master
	mv master master.tar.gz
	tar -xf master.tar.gz
	mv kanaka-noVNC-* noVNC
	rm master.tar.gz

# JavaScript files from standard JS libraries that we wish to keep local copies of

external_scripts: yui-min.js jquery-1.8.1.min.js underscore-min.js d3.v3.min.js

yui-min.js:
	cd widgets; wget http://yui.yahooapis.com/3.11.0/build/yui/yui-min.js

jquery-1.8.1.min.js:
	cd widgets; wget http://code.jquery.com/jquery-1.8.1.min.js
	
underscore-min.js:
	cd widgets; wget http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js

d3.v3.min.js:
	cd widgets; wget http://d3js.org/d3.v3.min.js

clean:
	rm -fr xdotool
	rm -rf ID3-Decision-Tree
	../killP mongoose/mongoose
	../killP shellinabox/bin/shellinaboxd
	rm -rf *.o shellinabox* mongoose* graphviz noVNC
	rm -f yui-min.js jquery-1.8.1.min.js underscore-min.js d3.v3.min.js
